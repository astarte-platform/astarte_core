name: Build and Test

on:
  # Run when pushing to stable branches
  push:
    branches:
    - 'master'
    - 'release-*'
  # Run on branch/tag creation
  create:
  # Run on pull requests
  pull_request:

env:
  elixir_version: "1.11.3"
  otp_version: "23.2"

jobs:
  test-dialyzer:
    name: Check Dialyzer
    runs-on: ubuntu-latest
    env:
      MIX_ENV: ci
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: deps
        key: ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - uses: actions/cache@v1
      with:
        path: _build
        key: ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-_build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-_build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - uses: actions/cache@v1
      with:
        path: dialyzer_cache
        key: ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-dialyzer_cache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-dialyzer_cache-
    - uses: erlef/setup-elixir@v1.6.0
      with:
        otp-version: ${{ env.otp_version }}
        elixir-version: ${{ env.elixir_version }}
    - name: Install Dependencies
      run: mix deps.get
    - name: Run dialyzer
      # FIXME: This should be set to fail when dialyzer issues are fixed
      run: mix dialyzer || exit 0

  test-coverage:
    name: Build and Test
    runs-on: ubuntu-latest
    # Wait for Dialyzer to give it a go before building
    needs:
      - test-dialyzer
    env:
      MIX_ENV: test
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: deps
        key: ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - uses: actions/cache@v1
      with:
        path: _build
        key: ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-_build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-${{ env.elixir_version }}-${{ env.otp_version }}-_build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - uses: erlef/setup-elixir@v1.6.0
      with:
        otp-version: ${{ env.otp_version }}
        elixir-version: ${{ env.elixir_version }}
    - name: Install Dependencies
      run: mix deps.get
    - name: Check formatting
      run: mix format --check-formatted
    - name: Compile
      run: mix compile
    - name: Test and Coverage
      run: mix coveralls.json  --exclude wip -o coverage_results
    - name: Upload Coverage Results to CodeCov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN
